Algorithms
https://www.youtube.com/channel/UCh27N8m4Jp_rkwx26Q4iclQ
http://courses.csail.mit.edu/6.006/fall11/
https://www.algorithm-archive.org/contents/gaussian_elimination/gaussian_elimination.html

Category Theory
https://ocw.mit.edu/courses/mathematics/18-s097-applied-category-theory-january-iap-2019/lecture-videos-and-readings/
http://www.cs.nott.ac.uk/~pszgmh/cat.html
https://plato.stanford.edu/entries/category-theory/bib.html

CS learning guide
https://ocw.mit.edu/courses/6-042j-mathematics-for-computer-science-fall-2010/video_galleries/video-lectures/
https://teachyourselfcs.com/
https://www.reddit.com/r/learnprogramming/comments/gsansp/my_55step_selftaught_cs_curriculum_updated/
http://catalog.mit.edu/degree-charts/computer-science-engineering-course-6-3/
https://online.stanford.edu/courses/soe-ycscs101-sp-computer-science-101
https://www.cl.cam.ac.uk/teaching/1718/cst.pdf
https://ocw.mit.edu/courses/6-090-building-programming-experience-a-lead-in-to-6-001-january-iap-2005/

Emacs example configs
https://www.emacswiki.org/emacs/ExampleConfigurations

Rust Programming
https://docs.microsoft.com/en-us/shows/beginners-series-to-rust/
http://cis198-2016s.github.io/schedule/
https://rust-unofficial.github.io/too-many-lists/second-generic.html
https://dtolnay.github.io/rust-quiz/1
https://www.breakdown-notes.com/make/load/rust_cs_canvas/true
https://upsuper.github.io/rust-cheatsheet/
https://phaiax.github.io/rust-cheatsheet/
https://xania.org/201506/traits-and-trait-objects
https://rust-unofficial.github.io/patterns/
https://shane-o.dev/blog/aiming-for-idiomatic-rust
https://www.lurklurk.org/effective-rust/use-types-2.html
https://cglab.ca/~abeinges/blah/rust-reuse-and-recycle/
https://medium.com/swlh/understanding-closures-in-rust-21f286ed1759
https://blog.guillaume-gomez.fr/articles/2017-03-09+Little+tour+of+multiple+iterators+implementation+in+Rust
https://github.com/pretzelhammer/rust-blog/blob/master/posts/common-rust-lifetime-misconceptions.md
https://www.sheshbabu.com/posts/rust-module-system/
https://tratt.net/laurie/blog/2019/a_quick_look_at_trait_objects_in_rust.html
https://beachape.com/blog/2017/03/12/gentle-intro-to-type-level-recursion-in-Rust-from-zero-to-frunk-hlist-sculpting/
https://brson.github.io/rust-anthology/1/rusts-built-in-traits.html
https://overexact.com/rust-for-professionals/#closures-(lambdas)
SICP/scheme
https://ocw.mit.edu/courses/6-001-structure-and-interpretation-of-computer-programs-spring-2005/pages/lecture-notes/
https://github.com/abrantesasf/sicp-abrantes-study-guide
https://ocw.mit.edu/courses/6-001-structure-and-interpretation-of-computer-programs-spring-2005/pages/
https://www.youtube.com/watch?v=Kq-4nhIktes
https://www.lvguowei.me/post/sicp-goodness-environment-model/

C
https://en.wikibooks.org/wiki/C_Programming
https://gist.github.com/eatonphil/21b3d6569f24ad164365
https://web.archive.org/web/20170620131430/https://www.tedunangst.com/flak/post/memcpy-vs-memmove

Haskell
https://github.com/soupi/haskell-study-plan
http://dev.stephendiehl.com/hask/
https://codewithstyle.info/advanced-functional-programming-in-typescript-maybe-monad/
https://www.youtube.com/watch?v=6MsQcUprO9o&list=PLOJjn67NeYg9cWA4hyIWcxfaeX64pwo1c
https://kowainik.github.io/posts/2019-02-06-style-guide
https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours/Parsing
https://www.seas.upenn.edu/~cis1940/spring13/lectures.html
https://books.goalkicker.com/HaskellBook/
https://haskell.mooc.fi/part1

Go
https://github.com/tmrts/go-patterns
https://golangresources.com/
https://github.com/inancgumus/learngo
https://www.amazon.com/dp/1737384426/
https://github.com/dariubs/GoBooks#starter-books
https://www.developer.com/languages/go-project-layout/
http://go-database-sql.org/accessing.html
https://github.com/go-gl/glfw
https://github.com/uber-go/guide/blob/master/style.md
https://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/
https://github.com/a8m/golang-cheat-sheet
https://golangbot.com/learn-golang-series/
https://astaxie.gitbooks.io/build-web-application-with-golang/content/en/
https://github.com/golang/go/wiki/CommonMistakes
https://golangbot.com/interfaces-part-1/
https://gophersnippets.com/
https://gosamples.dev/
https://semaphoreci.com/community/tutorials/how-to-deploy-a-go-web-application-with-docker
https://codegangsta.gitbooks.io/building-web-apps-with-go/content/
https://semaphoreci.com/community/tutorials/building-go-web-applications-and-microservices-using-gin
https://quii.gitbook.io/learn-go-with-tests/go-fundamentals/hello-world
https://tutorialedge.net/course/golang/
https://wiki.crdb.io/wiki/spaces/CRDB/pages/181371303/Go+Golang+coding+guidelines#Pointers-to-Interfaces
https://github.com/enocom/gopher-reading-list
https://yourbasic.org/golang
https://www.youtube.com/channel/UCC2ot8w_U6yQsq7jdpbECvQ?app=desktop
https://riptutorial.com/go/topic/9463/best-practices-on-project-structure
https://rytisbiel.com/2021/03/06/darker-corners-of-go/#iota


Software engineering 
https://softwarefoundations.cis.upenn.edu/
https://github.com/prakhar1989/awesome-courses
https://see.stanford.edu/Course/CS107
https://www.cs.cornell.edu/courses/cs1110/2014fa/lectures/index.php

Building stuff
https://www.youtube.com/results?search_query=%s

Unix Programming
http://www.linusakesson.net/programming/tty/
https://www.x.org/releases/X11R7.6/doc/xproto/x11protocol.html
https://www.x.org/releases/X11R7.7/doc/libxcb/tutorial/index.html
http://xopendisplay.hilltopia.ca/2009/Jan/Xlib-tutorial-part-1----Beginnings.html
https://tronche.com/gui/x/xlib-tutorial/

General Info unix
https://www.liquisearch.com/ansi_escape_code/csi_codes
https://invisible-island.net/xterm/ctlseqs/ctlseqs.html
https://www.asciitable.com/
https://ishuah.com/2021/02/04/understanding-the-linux-tty-subsystem/
https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/#:~:text=The%20Absolute%20Minimum%20Every%20Software,%E2%80%93%20Joel%20on%20Software

Networking
https://www.youtube.com/watch?v=qAFI-2I7wPE&list=PLoCMsyE1cvdWKsLVyf6cPwCLDIZnOj0NS&index=1
https://www.youtube.com/watch?v=rL8RSFQG8do&list=PLF360ED1082F6F2A5&index=1
https://www.youtube.com/watch?v=569CfpoLc8s&list=PLoCMsyE1cvdWKsLVyf6cPwCLDIZnOj0NS&index=3
Microservices
https://www.youtube.com/watch?v=VzBGi_n65iU&list=PLmD8u-IFdreyh6EUfevBcbiuCKzFk0EW_

Shell
https://explainshell.com/
https://www.learnshell.org/

Ricing
https://github.com/fosslife/awesome-ricing
https://github.com/agarrharr/awesome-cli-apps#readme

Others
https://groups.csail.mit.edu/mac/users/gjs/6.945/dont-panic/

Wallpapers
https://github.com/DenverCoder1/minimalistic-wallpaper-collection

Coding Challenge
https://projecteuler.net/archives

Tmux 24bit color fix
https://gist.github.com/andersevenrud/015e61af2fd264371032763d4ed965b6

Neovim startup time optimization
https://www.reddit.com/r/neovim/comments/opipij/guide_tips_and_tricks_to_reduce_startup_and/

React
https://reactjsexample.com/

Freelancing
https://www.reddit.com/r/webdev/comments/y38tf4/best_freelance_sites_for_developers_starting_out/

AI
http://ai.berkeley.edu/lecture_videos.html

Y combinator
https://mvanier.livejournal.com/2897.html
